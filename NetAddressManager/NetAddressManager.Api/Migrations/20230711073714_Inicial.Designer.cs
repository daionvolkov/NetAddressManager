// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetAddressManager.Api.Models;

#nullable disable

namespace NetAddressManager.Api.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230711073714_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NetAddressManager.Api.Models.AccessSwitch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AggregationSwitchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipmentManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPMask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MACAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int?>("PostalAddressId1")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SwitchPortId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AggregationSwitchId");

                    b.HasIndex("EquipmentManufacturerId");

                    b.HasIndex("PostalAddressId1");

                    b.ToTable("AccessSwitch");
                });

            modelBuilder.Entity("NetAddressManager.Api.Models.AggregationSwitch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CoreSwitchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipmentManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPMask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MACAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int?>("PostalAddressId1")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SwitchPortId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoreSwitchId");

                    b.HasIndex("EquipmentManufacturerId");

                    b.HasIndex("PostalAddressId1");

                    b.ToTable("AggregationSwitch");
                });

            modelBuilder.Entity("NetAddressManager.Api.Models.CoreSwitch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipmentManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPGateway")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPMask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MACAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int?>("PostalAddressId1")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SwitchPortId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentManufacturerId");

                    b.HasIndex("PostalAddressId1");

                    b.ToTable("CoreSwitch");
                });

            modelBuilder.Entity("NetAddressManager.Api.Models.EquipmentManufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EquipmentManufacturer");
                });

            modelBuilder.Entity("NetAddressManager.Api.Models.PostalAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Building")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PostalAddress");
                });

            modelBuilder.Entity("NetAddressManager.Api.Models.SwitchPort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccessSwitchId")
                        .HasColumnType("int");

                    b.Property<int?>("AggregationSwitchId")
                        .HasColumnType("int");

                    b.Property<int?>("CoreSwitchId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortNumber")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccessSwitchId");

                    b.HasIndex("AggregationSwitchId");

                    b.HasIndex("CoreSwitchId");

                    b.ToTable("SwitchPort");
                });

            modelBuilder.Entity("NetAddressManager.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("NetAddressManager.Api.Models.AccessSwitch", b =>
                {
                    b.HasOne("NetAddressManager.Api.Models.AggregationSwitch", "AggregationSwitch")
                        .WithMany("AccessSwitches")
                        .HasForeignKey("AggregationSwitchId");

                    b.HasOne("NetAddressManager.Api.Models.EquipmentManufacturer", "EquipmentManufacturer")
                        .WithMany()
                        .HasForeignKey("EquipmentManufacturerId");

                    b.HasOne("NetAddressManager.Api.Models.PostalAddress", "PostalAddress")
                        .WithMany()
                        .HasForeignKey("PostalAddressId1");

                    b.Navigation("AggregationSwitch");

                    b.Navigation("EquipmentManufacturer");

                    b.Navigation("PostalAddress");
                });

            modelBuilder.Entity("NetAddressManager.Api.Models.AggregationSwitch", b =>
                {
                    b.HasOne("NetAddressManager.Api.Models.CoreSwitch", "CoreSwitch")
                        .WithMany("AggregationSwitches")
                        .HasForeignKey("CoreSwitchId");

                    b.HasOne("NetAddressManager.Api.Models.EquipmentManufacturer", "EquipmentManufacturer")
                        .WithMany()
                        .HasForeignKey("EquipmentManufacturerId");

                    b.HasOne("NetAddressManager.Api.Models.PostalAddress", "PostalAddress")
                        .WithMany()
                        .HasForeignKey("PostalAddressId1");

                    b.Navigation("CoreSwitch");

                    b.Navigation("EquipmentManufacturer");

                    b.Navigation("PostalAddress");
                });

            modelBuilder.Entity("NetAddressManager.Api.Models.CoreSwitch", b =>
                {
                    b.HasOne("NetAddressManager.Api.Models.EquipmentManufacturer", "EquipmentManufacturer")
                        .WithMany()
                        .HasForeignKey("EquipmentManufacturerId");

                    b.HasOne("NetAddressManager.Api.Models.PostalAddress", "PostalAddress")
                        .WithMany()
                        .HasForeignKey("PostalAddressId1");

                    b.Navigation("EquipmentManufacturer");

                    b.Navigation("PostalAddress");
                });

            modelBuilder.Entity("NetAddressManager.Api.Models.SwitchPort", b =>
                {
                    b.HasOne("NetAddressManager.Api.Models.AccessSwitch", null)
                        .WithMany("SwitchPorts")
                        .HasForeignKey("AccessSwitchId");

                    b.HasOne("NetAddressManager.Api.Models.AggregationSwitch", null)
                        .WithMany("SwitchPorts")
                        .HasForeignKey("AggregationSwitchId");

                    b.HasOne("NetAddressManager.Api.Models.CoreSwitch", null)
                        .WithMany("SwitchPorts")
                        .HasForeignKey("CoreSwitchId");
                });

            modelBuilder.Entity("NetAddressManager.Api.Models.AccessSwitch", b =>
                {
                    b.Navigation("SwitchPorts");
                });

            modelBuilder.Entity("NetAddressManager.Api.Models.AggregationSwitch", b =>
                {
                    b.Navigation("AccessSwitches");

                    b.Navigation("SwitchPorts");
                });

            modelBuilder.Entity("NetAddressManager.Api.Models.CoreSwitch", b =>
                {
                    b.Navigation("AggregationSwitches");

                    b.Navigation("SwitchPorts");
                });
#pragma warning restore 612, 618
        }
    }
}
